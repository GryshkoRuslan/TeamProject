let msg = {
    status: 400,
    data: [],
    message: '',
    responseCode: 1
};

const Erros = (code) => {
    switch (code) {
        case '23505': {
            msg.message = 'Нарушение ограничения уникальности';
            return msg
        }
        case '07001': {
            msg.message = 'В команде было указано больше или меньше переменных среды, чем ожидалось';
            return msg
        }
        case '07002': {
            msg.message = 'В команде было указано больше или меньше переменных среды, чем ожидалось';
            return msg
        }
        case '21000': {
            msg.message = 'Запрос вернул несколько строк, но оператор был подготовлен только для одной строки результата';
            return msg
        }
        case '42804': {
            msg.message = 'Переменная среды и данные в базе имеют разные типы данных, и в этих данных содержится значение, которое нельзя преобразовать.';
            return msg
        }
        case '22002': {
            msg.message = 'Возвращено значение NULL, но переменная-индикатор NULL не задана.';
            return msg
        }
        case '08003': {
            msg.message = 'Программа попыталась использовать несуществующее подключение.';
            return msg
        }
        case '26000': {
            msg.message = 'Оператор, который вы пытаетесь выполнить, не был подготовлен.';
            return msg
        }
        case '33000': {
            msg.message = 'Указанный дескриптор не найден. Оператор, который вы пытаетесь использовать, не был подготовлен.';
            return msg
        }
        case '07009': {
            msg.message = 'Указанный индекс дескриптора вне диапазона.';
            return msg
        }
        case '07006': {
            msg.message = 'При выполнении динамического оператора база данных возвратила числовое/не числовое значение, тогда как переменная среды — не числовая/числовая.';
            return msg
        }
        case '08007': {
            msg.message = 'Сервер Postgres Pro сообщает, что клиент не может запускать, фиксировать или отменять транзакцию.';
            return msg
        }
        case '08001': {
            msg.message = 'Попытка подключения к базе данных была неудачной.';
            return msg
        }
        case '34000': {
            msg.message = 'Указано неверное имя курсора.';
            return msg
        }
        case '25001': {
            msg.message = 'Транзакция в процессе выполнения.';
            return msg
        }
        case '25P01': {
            msg.message = 'Нет активной (выполняющейся) транзакции.';
            return msg
        }
        case '42P03': {
            msg.message = 'Было указано имя существующего курсора.';
            return msg
        }
        default: {
            msg.message = `Неизвестная ошибка SQLSTATE - ${code}`;
            return msg
        }
    }
};

module.exports = Erros;
